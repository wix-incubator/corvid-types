// the first part of this file is being generated by => scripts/selector-declaration-builder.js
// Run `npm run generate-dts` to generate it
declare type IntersectionArrayAndBase<T, P> = {
    [K in keyof T]: K extends P ? T[K] : T[K] & T[K][];
};

declare type IsWixElementSelector<S> = S extends keyof WixElementSelector ? WixElementSelector[S] : never;
declare type WixElementSelector = PageElementsMap & IntersectionArrayAndBase<TypeNameToSdkType, 'Document'>;

declare function $w<T extends keyof WixElementSelector, S extends string>(selector: T | S & IsWixElementSelector<S>):
    S extends keyof WixElementSelector 
        ? WixElementSelector[S]
        : any
/**
 * The `$w` namespace contains everything you need in order to work
 *  with your site's components.
 */
declare namespace $w {
    /**
     * Gets a selector function for a specific context.
     */
    function at(context: $w.Event.EventContext): $w.$w;

    /**
     * Sets the function that runs when all the page elements have finished loading.
     */
    function onReady(initFunction: $w.ReadyHandler): void;

    /**
     * Selects and returns elements from a page.
     */
    type $w = <T extends keyof WixElementSelector, S extends string>(selector: T | S & IsWixElementSelector<S>) =>
        S extends keyof WixElementSelector 
            ? WixElementSelector[S]
            : any
}

